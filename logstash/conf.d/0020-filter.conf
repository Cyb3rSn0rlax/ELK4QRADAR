filter {
         # Parsing search files with CSV filter
        csv {
            columns => ["OffenseID","RuleName","StartTime","StorageTime","LogSourceTime","EventName"]
        }

        mutate  {
            add_field => {"time_date" => "%{StartTime}"}
            add_field => {"time_starttime" => "%{StartTime}"}
            add_field => {"time_storagetime" => "%{StorageTime}"}
            add_field => {"time_logsourcetime" => "%{LogSourceTime}"}
            copy => { "[OffenseID]" => "[offense][id]" }
            copy => { "[RuleName]" => "[rule][name]" }
            copy => { "[EventName]" => "[event][name]" }
        }

        # Some event processing to avoid unwanted values.
        if [offense][id] == "N/A" {
            drop { }
        }
        if [rule][name] == "null" {
            drop { }
        }
        if [EventName] == "unknown" {
            mutate {
                replace => {"[event][name]" => "Offense Created"}
            }
        }

        # Populating [client][name] fields according to your list of clients
        # You should customize the clientnames.yml file content accordingly 
        translate {
                field => "[tags]"
                destination => "[client][name]"
                dictionary_path => "/etc/logstash/clientnames.yml"
                fallback => "unknown_client_name"
        }
        if [client][name] == "unknown_client_name" {
            mutate {
                add_field => { "[tags]" => "_error_client_name_enrichment" }
            }

        }

        # If you have multiple cients in multiple geo-locations you would need to normalize the ingestion timezone accordingly
        translate {
                field => "[client][name]"
                destination => "[event][timezone]"
                dictionary_path => "/etc/logstash/timezones.yml"
                fallback => "default_timezone"
        }
        if [event][timezone] == "default_timezone" {
            mutate {
                add_field => { "[tags]" => "_error_timezone_enrichment" }
            }

        }

        # Date format normalization

        if [client][name] and [event][timezone] {

            date    {
                match => ["time_date", "yyyy-MM-dd HH:mm:ss a"]
                timezone => "%{[event][timezone]}"
                target => "@timestamp"
                tag_on_failure => ["_creation_dateparsefailure"]
            }
            date    {
                match => ["time_starttime", "yyyy-MM-dd HH:mm:ss a"]
                timezone => "%{[event][timezone]}"
                target => "[offense][starttime]"
                tag_on_failure => ["_start_dateparsefailure"]
            }
            date    {
                match => ["time_storagetime", "yyyy-MM-dd HH:mm:ss a"]
                timezone => "%{[event][timezone]}"
                target => "[offense][storagetime]"
                tag_on_failure => ["_storage_dateparsefailure"]
            }
            date    {
                match => ["time_logsourcetime", "yyyy-MM-dd HH:mm:ss a"]
                timezone => "%{[event][timezone]}"
                target => "[offense][logsourcetime]"
                tag_on_failure => ["_logsource_dateparsefailure"]
            }
        }

        #Remove unwanted fields
        mutate {
                remove_field => ["OffenseID","RuleName","EventName","StartTime","StorageTime","LogSourceTime","EventName","time_date","DomainName","message","time_logsourcetime","time_starttime","time_storagetime"]
                lowercase => [ "[client][name]" ] # we will add clients name at the index name so we need it to be in lowercase to evade any indexing errors
        }

}